/* Base editor wrapper */
.autoartifacts-editor {
  position: relative;
}

/* Default slide styles */
.slide {
  margin: 20px 0;
  padding: 20px;
  background: white;
}

.row {
  display: flex;
  gap: 16px;
  margin: 10px 0;
}

.column {
  flex: 1;
  min-width: 0;
}

.ProseMirror {
  outline: none;
  min-height: 100px;
}

/* Light theme (default) */
.autoartifacts-editor.theme-light {
  background: #ffffff;
}

.autoartifacts-editor.theme-light .slide {
  background: #f9fafb;
}

/* Dark theme */
.autoartifacts-editor.theme-dark {
  background: #1e293b;
}

.autoartifacts-editor.theme-dark .slide {
  background: #0f172a;
  color: #f1f5f9;
}

/* Presentation theme */
.autoartifacts-editor.theme-presentation {
  background: #000000;
  padding: 40px;
}

.autoartifacts-editor.theme-presentation .slide {
  aspect-ratio: 16 / 9;
  max-width: 1200px;
  margin: 40px auto;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
}

/* Image display modes */
img[data-display="cover"] {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

img[data-display="contain"] {
  object-fit: contain;
  max-width: 100%;
  height: auto;
}

img[data-display="fill"] {
  object-fit: fill;
  width: 100%;
}

img[data-align="center"] {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

img[data-align="right"] {
  display: block;
  margin-left: auto;
}

/* Video wrapper */
.video-wrapper {
  position: relative;
  width: 100%;
}

.video-wrapper[data-aspect-ratio="16:9"] {
  aspect-ratio: 16 / 9;
}

.video-wrapper[data-aspect-ratio="4:3"] {
  aspect-ratio: 4 / 3;
}

.video-wrapper[data-aspect-ratio="1:1"] {
  aspect-ratio: 1 / 1;
}

.video-wrapper[data-align="center"] {
  margin-left: auto;
  margin-right: auto;
}

.video-wrapper iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* Lists */
.bullet-list,
.ordered-list {
  margin: 10px 0;
  padding-left: 24px;
}

.list-item {
  margin: 4px 0;
}

/* Column content modes */
.column.content-cover img,
.column.content-cover video {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

.column.content-contain img,
.column.content-contain video {
  object-fit: contain;
  max-width: 100%;
  height: auto;
}

/* Column vertical alignment */
.column.v-align-top {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.column.v-align-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.column.v-align-bottom {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

/* Column horizontal alignment */
.column.h-align-left {
  text-align: left;
}

.column.h-align-center {
  text-align: center;
}

.column.h-align-right {
  text-align: right;
}

/* Column padding */
.column.padding-none {
  padding: 0;
}

.column.padding-small {
  padding: 12px;
}

.column.padding-medium {
  padding: 20px;
}

.column.padding-large {
  padding: 32px;
}

/* Remove ProseMirror's default dotted borders on structural elements */
/* Using :not([class*="border"]) to allow user-defined border classes to work */
.ProseMirror .slide:not([class*="border"]),
.ProseMirror .row:not([class*="border"]),
.ProseMirror .column:not([class*="border"]) {
  border: none;
  outline: none;
}

/* Remove ProseMirror's default styling on structural elements */
.ProseMirror .slide,
.ProseMirror .row,
.ProseMirror .column {
  background: none;
  border-radius: 0;
  padding: 0;
  margin-bottom: 0;
}

/* Remove ProseMirror's selection outline */
.ProseMirror-selectednode {
  outline: none;
}

/* Phase 1: MVP mark styles */
strong {
  font-weight: 600;
}

em {
  font-style: italic;
}

u {
  text-decoration: underline;
}

s {
  text-decoration: line-through;
}

code.inline-code {
  background: #f1f5f9;
  padding: 2px 6px;
  border-radius: 3px;
  font-family: "Courier New", monospace;
  font-size: 0.9em;
}

a {
  color: #2563eb;
  text-decoration: underline;
  cursor: pointer;
}

a:hover {
  color: #1d4ed8;
}

/* Phase 2: Post-MVP mark styles */
sup {
  vertical-align: super;
  font-size: 0.75em;
}

sub {
  vertical-align: sub;
  font-size: 0.75em;
}

mark {
  padding: 2px 4px;
  border-radius: 2px;
}

/* ==================== SLIDE THEMES ==================== */
/* These apply to ALL slides when slideTheme prop is set */

/* Default Theme - Clean white with subtle border */
.autoartifacts-editor.slide-theme-default .slide {
  background: #ffffff;
  border: 1px solid #e5e7eb;
  border-radius: 8px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* Dark Theme - Dark background with light text */
.autoartifacts-editor.slide-theme-dark .slide {
  background: #1e293b;
  border: 1px solid #334155;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
  color: #f1f5f9;
}

.autoartifacts-editor.slide-theme-dark .slide h1,
.autoartifacts-editor.slide-theme-dark .slide h2,
.autoartifacts-editor.slide-theme-dark .slide h3,
.autoartifacts-editor.slide-theme-dark .slide h4,
.autoartifacts-editor.slide-theme-dark .slide h5,
.autoartifacts-editor.slide-theme-dark .slide h6 {
  color: #f1f5f9;
}

.autoartifacts-editor.slide-theme-dark .slide p {
  color: #e2e8f0;
}

/* Minimal Theme - No borders or shadows, just content */
.autoartifacts-editor.slide-theme-minimal .slide {
  background: #ffffff;
  border: none;
  border-radius: 0;
  box-shadow: none;
}

/* Gradient Theme - Purple gradient background */
.autoartifacts-editor.slide-theme-gradient .slide {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border: none;
  border-radius: 12px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  color: #ffffff;
}

.autoartifacts-editor.slide-theme-gradient .slide h1,
.autoartifacts-editor.slide-theme-gradient .slide h2,
.autoartifacts-editor.slide-theme-gradient .slide h3,
.autoartifacts-editor.slide-theme-gradient .slide h4,
.autoartifacts-editor.slide-theme-gradient .slide h5,
.autoartifacts-editor.slide-theme-gradient .slide h6 {
  color: #ffffff;
}

.autoartifacts-editor.slide-theme-gradient .slide p {
  color: #f3f4f6;
}

/* Custom themes: Developers can add their own like this:
.autoartifacts-editor.slide-theme-my-brand .slide {
  background: your-color;
  border: your-border;
  // ... etc
}
*/
